definitions:
  dto.BulkStatusUpdateRequest:
    properties:
      changed_by:
        example: user123
        type: string
      status:
        allOf:
        - $ref: '#/definitions/entity.TaskStatus'
        enum:
        - TODO
        - PLANNING
        - PLAN_REVIEWING
        - IMPLEMENTING
        - CODE_REVIEWING
        - DONE
        - CANCELLED
        example: TODO
      task_ids:
        example:
        - '["123e4567-e89b-12d3-a456-426614174000"]'
        items:
          type: string
        type: array
    required:
    - status
    - task_ids
    type: object
  dto.ErrorResponse:
    properties:
      code:
        example: 400
        type: integer
      details:
        additionalProperties:
          type: string
        type: object
      error:
        example: Invalid request
        type: string
      message:
        example: The provided data is invalid
        type: string
    type: object
  dto.ProjectCreateRequest:
    properties:
      description:
        example: Project description
        maxLength: 1000
        type: string
      name:
        example: My Project
        maxLength: 255
        minLength: 1
        type: string
      repo_url:
        example: https://github.com/user/repo
        maxLength: 500
        type: string
    required:
    - name
    - repo_url
    type: object
  dto.ProjectListResponse:
    properties:
      page:
        type: integer
      page_size:
        type: integer
      projects:
        items:
          $ref: '#/definitions/dto.ProjectResponse'
        type: array
      total:
        type: integer
    type: object
  dto.ProjectResponse:
    properties:
      created_at:
        example: "2024-01-15T10:30:00Z"
        type: string
      description:
        example: Project description
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      name:
        example: My Project
        type: string
      repo_url:
        example: https://github.com/user/repo
        type: string
      updated_at:
        example: "2024-01-15T10:30:00Z"
        type: string
    type: object
  dto.ProjectSettingsResponse:
    properties:
      auto_archive_days:
        type: integer
      created_at:
        type: string
      email_notifications:
        type: boolean
      git_auto_sync:
        type: boolean
      git_branch:
        type: string
      id:
        type: string
      notifications_enabled:
        type: boolean
      project_id:
        type: string
      slack_webhook_url:
        type: string
      task_prefix:
        type: string
      updated_at:
        type: string
    type: object
  dto.ProjectSettingsUpdateRequest:
    properties:
      auto_archive_days:
        type: integer
      email_notifications:
        type: boolean
      git_auto_sync:
        type: boolean
      git_branch:
        type: string
      notifications_enabled:
        type: boolean
      slack_webhook_url:
        type: string
      task_prefix:
        type: string
    type: object
  dto.ProjectStatisticsResponse:
    properties:
      completion_percent:
        type: number
      last_activity_at:
        type: string
      recent_activity:
        type: integer
      tasks_by_status:
        additionalProperties:
          type: integer
        type: object
      total_tasks:
        type: integer
    type: object
  dto.ProjectUpdateRequest:
    properties:
      description:
        example: Updated description
        maxLength: 1000
        type: string
      name:
        example: Updated Project Name
        maxLength: 255
        minLength: 1
        type: string
      repo_url:
        example: https://github.com/user/updated-repo
        maxLength: 500
        type: string
    type: object
  dto.ProjectWithTasksResponse:
    properties:
      created_at:
        example: "2024-01-15T10:30:00Z"
        type: string
      description:
        example: Project description
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      name:
        example: My Project
        type: string
      repo_url:
        example: https://github.com/user/repo
        type: string
      tasks:
        items:
          $ref: '#/definitions/dto.TaskResponse'
        type: array
      updated_at:
        example: "2024-01-15T10:30:00Z"
        type: string
    type: object
  dto.SuccessResponse:
    properties:
      data: {}
      message:
        example: Operation completed successfully
        type: string
    type: object
  dto.TaskCreateRequest:
    properties:
      description:
        example: Add JWT-based authentication system
        maxLength: 1000
        type: string
      project_id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      title:
        example: Implement user authentication
        maxLength: 255
        minLength: 1
        type: string
    required:
    - project_id
    - title
    type: object
  dto.TaskListResponse:
    properties:
      tasks:
        items:
          $ref: '#/definitions/dto.TaskResponse'
        type: array
      total:
        type: integer
    type: object
  dto.TaskResponse:
    properties:
      branch_name:
        example: feature/user-auth
        type: string
      created_at:
        example: "2024-01-15T10:30:00Z"
        type: string
      description:
        example: Add JWT-based authentication system
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      project_id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      pull_request:
        example: https://github.com/user/repo/pull/123
        type: string
      status:
        allOf:
        - $ref: '#/definitions/entity.TaskStatus'
        example: TODO
      title:
        example: Implement user authentication
        type: string
      updated_at:
        example: "2024-01-15T10:30:00Z"
        type: string
    type: object
  dto.TaskStatusAnalyticsResponse:
    properties:
      average_time_in_status:
        additionalProperties:
          type: number
        type: object
      completed_tasks:
        example: 20
        type: integer
      completion_rate:
        example: 40
        type: number
      generated_at:
        example: "2024-01-15T10:30:00Z"
        type: string
      project_id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      status_distribution:
        items:
          $ref: '#/definitions/dto.TaskStatusStatsResponse'
        type: array
      total_tasks:
        example: 50
        type: integer
      transition_count:
        additionalProperties:
          type: integer
        type: object
    type: object
  dto.TaskStatusHistoryResponse:
    properties:
      changed_by:
        example: user123
        type: string
      created_at:
        example: "2024-01-15T10:30:00Z"
        type: string
      from_status:
        allOf:
        - $ref: '#/definitions/entity.TaskStatus'
        example: TODO
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      reason:
        example: Requirements changed
        type: string
      task_id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      to_status:
        allOf:
        - $ref: '#/definitions/entity.TaskStatus'
        example: PLANNING
    type: object
  dto.TaskStatusStatsResponse:
    properties:
      count:
        example: 10
        type: integer
      status:
        allOf:
        - $ref: '#/definitions/entity.TaskStatus'
        example: TODO
    type: object
  dto.TaskStatusUpdateRequest:
    properties:
      status:
        allOf:
        - $ref: '#/definitions/entity.TaskStatus'
        enum:
        - TODO
        - PLANNING
        - PLAN_REVIEWING
        - IMPLEMENTING
        - CODE_REVIEWING
        - DONE
        - CANCELLED
        example: TODO
    required:
    - status
    type: object
  dto.TaskStatusUpdateWithHistoryRequest:
    properties:
      changed_by:
        example: user123
        type: string
      reason:
        example: Requirements changed
        type: string
      status:
        allOf:
        - $ref: '#/definitions/entity.TaskStatus'
        enum:
        - TODO
        - PLANNING
        - PLAN_REVIEWING
        - IMPLEMENTING
        - CODE_REVIEWING
        - DONE
        - CANCELLED
        example: TODO
    required:
    - status
    type: object
  dto.TaskStatusValidationResponse:
    properties:
      current_status:
        allOf:
        - $ref: '#/definitions/entity.TaskStatus'
        example: TODO
      message:
        example: Transition is valid
        type: string
      target_status:
        allOf:
        - $ref: '#/definitions/entity.TaskStatus'
        example: PLANNING
      valid:
        example: true
        type: boolean
    type: object
  dto.TaskUpdateRequest:
    properties:
      branch_name:
        example: feature/user-auth
        maxLength: 255
        type: string
      description:
        example: Updated description
        maxLength: 1000
        type: string
      pull_request:
        example: https://github.com/user/repo/pull/123
        maxLength: 255
        type: string
      title:
        example: Updated task title
        maxLength: 255
        minLength: 1
        type: string
    type: object
  dto.TaskWithProjectResponse:
    properties:
      branch_name:
        example: feature/user-auth
        type: string
      created_at:
        example: "2024-01-15T10:30:00Z"
        type: string
      description:
        example: Add JWT-based authentication system
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      project:
        $ref: '#/definitions/dto.ProjectResponse'
      project_id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      pull_request:
        example: https://github.com/user/repo/pull/123
        type: string
      status:
        allOf:
        - $ref: '#/definitions/entity.TaskStatus'
        example: TODO
      title:
        example: Implement user authentication
        type: string
      updated_at:
        example: "2024-01-15T10:30:00Z"
        type: string
    type: object
  entity.TaskStatus:
    enum:
    - TODO
    - PLANNING
    - PLAN_REVIEWING
    - IMPLEMENTING
    - CODE_REVIEWING
    - DONE
    - CANCELLED
    type: string
    x-enum-varnames:
    - TaskStatusTODO
    - TaskStatusPLANNING
    - TaskStatusPLANREVIEWING
    - TaskStatusIMPLEMENTING
    - TaskStatusCODEREVIEWING
    - TaskStatusDONE
    - TaskStatusCANCELLED
info:
  contact: {}
paths:
  /api/v1/projects:
    get:
      consumes:
      - application/json
      description: Get a list of all projects
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProjectListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: List all projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Create a new project with the provided details
      parameters:
      - description: Project creation data
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/dto.ProjectCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Create a new project
      tags:
      - projects
  /api/v1/projects/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a project by its ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Delete a project
      tags:
      - projects
    get:
      consumes:
      - application/json
      description: Get a single project by its ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get a project by ID
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update a project with the provided details
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Project update data
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/dto.ProjectUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Update a project
      tags:
      - projects
  /api/v1/projects/{id}/archive:
    post:
      consumes:
      - application/json
      description: Archive a project (soft delete)
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Archive a project
      tags:
      - projects
  /api/v1/projects/{id}/restore:
    post:
      consumes:
      - application/json
      description: Restore an archived project (undelete)
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Restore an archived project
      tags:
      - projects
  /api/v1/projects/{id}/settings:
    get:
      consumes:
      - application/json
      description: Get configuration settings for a project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProjectSettingsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get project settings
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update configuration settings for a project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Project settings data
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/dto.ProjectSettingsUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProjectSettingsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Update project settings
      tags:
      - projects
  /api/v1/projects/{id}/statistics:
    get:
      consumes:
      - application/json
      description: Get task statistics and completion data for a project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProjectStatisticsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get project statistics
      tags:
      - projects
  /api/v1/projects/{id}/status-analytics:
    get:
      consumes:
      - application/json
      description: Get comprehensive status analytics for a project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TaskStatusAnalyticsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get project status analytics
      tags:
      - tasks
      - analytics
  /api/v1/projects/{id}/tasks:
    get:
      consumes:
      - application/json
      description: Get a single project by its ID including all associated tasks
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProjectWithTasksResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get a project with its tasks
      tags:
      - projects
  /api/v1/projects/{project_id}/tasks:
    get:
      consumes:
      - application/json
      description: Get all tasks for a specific project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TaskListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: List tasks by project
      tags:
      - tasks
  /api/v1/tasks:
    get:
      consumes:
      - application/json
      description: Get a list of tasks with optional filtering by status, project,
        or search term
      parameters:
      - description: Filter by status
        enum:
        - TODO
        - PLANNING
        - PLAN_REVIEWING
        - IMPLEMENTING
        - CODE_REVIEWING
        - DONE
        - CANCELLED
        in: query
        name: status
        type: string
      - description: Filter by project ID
        in: query
        name: project_id
        type: string
      - description: Search in title and description
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TaskListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: List tasks with filtering
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Create a new task with the provided details
      parameters:
      - description: Task creation data
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/dto.TaskCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.TaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Create a new task
      tags:
      - tasks
  /api/v1/tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Delete a task
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Get a single task by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get a task by ID
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Update a task with the provided details
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Task update data
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/dto.TaskUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Update a task
      tags:
      - tasks
  /api/v1/tasks/{id}/project:
    get:
      consumes:
      - application/json
      description: Get a single task by its ID including the associated project
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TaskWithProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get a task with its project
      tags:
      - tasks
  /api/v1/tasks/{id}/status:
    patch:
      consumes:
      - application/json
      description: Update the status of a task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Task status update data
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/dto.TaskStatusUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Update a task status
      tags:
      - tasks
  /api/v1/tasks/{id}/status-history:
    get:
      consumes:
      - application/json
      description: Get the status change history for a specific task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.TaskStatusHistoryResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get task status history
      tags:
      - tasks
  /api/v1/tasks/{id}/status-with-history:
    patch:
      consumes:
      - application/json
      description: Update the status of a task with validation and history tracking
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Task status update with history data
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/dto.TaskStatusUpdateWithHistoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Update task status with history tracking
      tags:
      - tasks
  /api/v1/tasks/{id}/validate-transition:
    get:
      consumes:
      - application/json
      description: Check if a status transition is valid for a task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Target status to validate
        in: query
        name: target_status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TaskStatusValidationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Validate task status transition
      tags:
      - tasks
  /api/v1/tasks/bulk-status:
    patch:
      consumes:
      - application/json
      description: Update status for multiple tasks at once
      parameters:
      - description: Bulk status update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.BulkStatusUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Bulk update task statuses
      tags:
      - tasks
  /api/v1/tasks/filter:
    get:
      consumes:
      - application/json
      description: Get tasks with comprehensive filtering and sorting options
      parameters:
      - description: Filter by project ID
        in: query
        name: project_id
        type: string
      - description: Filter by single status
        in: query
        name: status
        type: string
      - description: Filter by multiple statuses
        in: query
        name: statuses
        type: array
      - description: Filter by creation date (after)
        in: query
        name: created_after
        type: string
      - description: Filter by creation date (before)
        in: query
        name: created_before
        type: string
      - description: Search in title and description
        in: query
        name: search
        type: string
      - description: Limit number of results
        in: query
        name: limit
        type: integer
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      - description: Field to order by
        in: query
        name: order_by
        type: string
      - description: Order direction (asc/desc)
        in: query
        name: order_dir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TaskListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get tasks with advanced filtering
      tags:
      - tasks
swagger: "2.0"
